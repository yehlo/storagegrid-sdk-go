name: Security Scan

on:
  # Run daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run on security-related changes
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/security.yml'
      - 'go.mod'
      - 'go.sum'

# Permissions required for security scanning and SARIF upload
permissions:
  contents: read
  security-events: write
  actions: read

env:
  GO_VERSION: '1.23'

jobs:
  gosec:
    name: Gosec Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        # Fetch full history for better analysis
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        # Generate SARIF report and continue on findings
        args: '-no-fail -fmt sarif -out gosec-results.sarif -severity medium ./...'
    
    - name: Upload Gosec SARIF file
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: gosec-results.sarif
        category: gosec

  govulncheck:
    name: Go Vulnerability Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest
    
    - name: Run govulncheck
      run: govulncheck ./...
    
    - name: Run govulncheck with JSON output
      run: |
        govulncheck -json ./... > govulncheck-results.json 2>&1 || true
    
    - name: Upload vulnerability report
      uses: actions/upload-artifact@v5
      with:
        name: vulnerability-report
        path: govulncheck-results.json
        retention-days: 30

  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.33.1
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'MEDIUM,HIGH,CRITICAL'
    
    - name: Upload Trivy SARIF file
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-results.sarif
        category: trivy
